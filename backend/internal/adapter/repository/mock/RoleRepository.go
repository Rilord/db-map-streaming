// Code generated by mockery v2.12.2. DO NOT EDIT.

package mocks

import (
	domain "game-server/internal/core/domain"

	mock "github.com/stretchr/testify/mock"

	ports "game-server/internal/core/ports/repository"

	testing "testing"
)

// RoleRepository is an autogenerated mock type for the RoleRepository type
type RoleRepository struct {
	mock.Mock
}

// Find provides a mock function with given fields: filter
func (_m *RoleRepository) Find(filter ports.RoleFilter) ([]*domain.User, error) {
	ret := _m.Called(filter)

	var r0 []*domain.User
	if rf, ok := ret.Get(0).(func(ports.RoleFilter) []*domain.User); ok {
		r0 = rf(filter)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*domain.User)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(ports.RoleFilter) error); ok {
		r1 = rf(filter)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewRoleRepository creates a new instance of RoleRepository. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewRoleRepository(t testing.TB) *RoleRepository {
	mock := &RoleRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
