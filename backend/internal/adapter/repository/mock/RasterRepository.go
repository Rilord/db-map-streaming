// Code generated by mockery v2.12.2. DO NOT EDIT.

package mocks

import (
	domain "game-server/internal/core/domain"

	mock "github.com/stretchr/testify/mock"

	testing "testing"
)

// RasterRepository is an autogenerated mock type for the RasterRepository type
type RasterRepository struct {
	mock.Mock
}

// Get provides a mock function with given fields: raster_id
func (_m *RasterRepository) Get(raster_id string) (domain.Raster, error) {
	ret := _m.Called(raster_id)

	var r0 domain.Raster
	if rf, ok := ret.Get(0).(func(string) domain.Raster); ok {
		r0 = rf(raster_id)
	} else {
		r0 = ret.Get(0).(domain.Raster)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(raster_id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewRasterRepository creates a new instance of RasterRepository. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewRasterRepository(t testing.TB) *RasterRepository {
	mock := &RasterRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
